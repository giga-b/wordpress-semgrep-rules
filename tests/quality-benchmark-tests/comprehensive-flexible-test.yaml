rules:
# XSS Detection - Multiple patterns
- id: wordpress.xss.unsafe-echo
  languages: [php]
  message: "Unsafe echo of user input without escaping"
  severity: ERROR
  pattern: echo $user_input;
  metadata:
    category: xss
    cwe: CWE-79

- id: wordpress.xss.unsafe-echo-get
  languages: [php]
  message: "Unsafe echo of GET parameter without escaping"
  severity: ERROR
  pattern: echo $_GET['user_input'];
  metadata:
    category: xss
    cwe: CWE-79

- id: wordpress.xss.unsafe-echo-post
  languages: [php]
  message: "Unsafe echo of POST parameter without escaping"
  severity: ERROR
  pattern: echo $_POST['user_input'];
  metadata:
    category: xss
    cwe: CWE-79

# SQL Injection Detection - Multiple patterns
- id: wordpress.sqli.unsafe-concatenation
  languages: [php]
  message: "Unsafe SQL query with string concatenation"
  severity: ERROR
  pattern: $query = "SELECT * FROM {$wpdb->prefix}users WHERE ID = " . $user_id;
  metadata:
    category: sql-injection
    cwe: CWE-89

- id: wordpress.sqli.unsafe-query
  languages: [php]
  message: "Unsafe SQL query with user input"
  severity: ERROR
  pattern: $wpdb->query("SELECT * FROM posts WHERE title LIKE '%$user_input%'");
  metadata:
    category: sql-injection
    cwe: CWE-89

# CSRF Detection - Multiple patterns
- id: wordpress.csrf.missing-nonce
  languages: [php]
  message: "Missing nonce verification for form submission"
  severity: ERROR
  pattern: if (isset($_POST['submit'])) { $data = $_POST['data']; }
  metadata:
    category: csrf
    cwe: CWE-352

- id: wordpress.csrf.missing-nonce-delete
  languages: [php]
  message: "Missing nonce verification for delete operation"
  severity: ERROR
  pattern: if (isset($_POST['delete_post'])) { wp_delete_post($post_id); }
  metadata:
    category: csrf
    cwe: CWE-352

- id: wordpress.csrf.missing-nonce-admin
  languages: [php]
  message: "Missing nonce verification for admin action"
  severity: ERROR
  pattern: if (isset($_POST['admin_action'])) { update_option('admin_setting', $_POST['admin_setting']); }
  metadata:
    category: csrf
    cwe: CWE-352

# Authorization Detection - Multiple patterns
- id: wordpress.authz.missing-capability
  languages: [php]
  message: "Missing capability check for sensitive operation"
  severity: ERROR
  pattern: if (isset($_POST['delete_user'])) { wp_delete_user($user_id); }
  metadata:
    category: authorization
    cwe: CWE-285

- id: wordpress.authz.missing-capability-admin
  languages: [php]
  message: "Missing capability check for admin operation"
  severity: ERROR
  pattern: if (isset($_POST['admin_action'])) { update_option('admin_setting', $_POST['admin_setting']); }
  metadata:
    category: authorization
    cwe: CWE-285

# File Upload Detection
- id: wordpress.file.unsafe-upload
  languages: [php]
  message: "Unsafe file upload without validation"
  severity: ERROR
  pattern: move_uploaded_file($_FILES['file']['tmp_name'], $_FILES['file']['name']);
  metadata:
    category: file-upload
    cwe: CWE-434

# Deserialization Detection
- id: wordpress.deserialization.unsafe
  languages: [php]
  message: "Unsafe deserialization of user input"
  severity: ERROR
  pattern: $data = unserialize($_POST['data']);
  metadata:
    category: deserialization
    cwe: CWE-502

# Dynamic Execution Detection
- id: wordpress.execution.eval
  languages: [php]
  message: "Unsafe eval usage with user input"
  severity: ERROR
  pattern: eval($_POST['code']);
  metadata:
    category: dynamic-execution
    cwe: CWE-95

- id: wordpress.execution.create-function
  languages: [php]
  message: "Unsafe create_function usage with user input"
  severity: ERROR
  pattern: create_function('$a', $_POST['code']);
  metadata:
    category: dynamic-execution
    cwe: CWE-95
