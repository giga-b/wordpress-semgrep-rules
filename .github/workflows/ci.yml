name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", "3.11"]
        config: [basic, strict, plugin-development]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install Semgrep
      run: |
        python -m pip install --upgrade pip
        pip install semgrep
    
    - name: Test vulnerable examples
      run: |
        semgrep scan --config=configs/${{ matrix.config }}.yaml tests/vulnerable-examples/ --json > vulnerable-results-${{ matrix.config }}.json
        echo "Vulnerable examples scan completed for ${{ matrix.config }} config"
    
    - name: Test safe examples
      run: |
        semgrep scan --config=configs/${{ matrix.config }}.yaml tests/safe-examples/ --json > safe-results-${{ matrix.config }}.json
        echo "Safe examples scan completed for ${{ matrix.config }} config"
    
    - name: Validate rule syntax
      run: |
        for file in packs/**/*.yaml; do
          echo "Validating $file"
          semgrep scan --config="$file" --dryrun
        done
    
    - name: Upload test results
      uses: actions/upload-artifact@v3
      with:
        name: test-results-${{ matrix.config }}-${{ matrix.python-version }}
        path: |
          vulnerable-results-${{ matrix.config }}.json
          safe-results-${{ matrix.config }}.json

  security:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install Semgrep
      run: |
        python -m pip install --upgrade pip
        pip install semgrep
    
    - name: Security scan of rules
      run: |
        semgrep scan --config=configs/strict.yaml . --exclude="tests/" --exclude=".git/" --json > security-scan-results.json
    
    - name: Upload security results
      uses: actions/upload-artifact@v3
      with:
        name: security-scan-results
        path: security-scan-results.json

  validate:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Validate YAML syntax
      run: |
        for file in $(find . -name "*.yaml" -o -name "*.yml"); do
          echo "Validating $file"
          python -c "import yaml; yaml.safe_load(open('$file', 'r'))"
        done
    
    - name: Check file structure
      run: |
        # Check required directories exist
        test -d packs/wp-core-security || exit 1
        test -d packs/wp-core-quality || exit 1
        test -d packs/experimental || exit 1
        test -d configs || exit 1
        test -d tests/vulnerable-examples || exit 1
        test -d tests/safe-examples || exit 1
        test -d docs || exit 1
        echo "Directory structure validation passed"
    
    - name: Validate README
      run: |
        # Check README exists and has content
        test -f README.md || exit 1
        test -s README.md || exit 1
        echo "README validation passed"
