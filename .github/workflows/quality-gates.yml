name: Quality Gates
on: 
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  quality-gates:
    name: Quality Gates Enforcement
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyyaml
          
      - name: Install Semgrep
        run: |
          python -m pip install semgrep
          
      - name: Run Quality Gates
        run: |
          python tests/quality-gates-working.py --project-root . --skip-corpus
          
      - name: Upload Quality Report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: quality-gates-report
          path: results/quality-gates/
          
  rule-validation:
    name: Rule Validation
    runs-on: ubuntu-latest
    needs: quality-gates
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyyaml
          
      - name: Install Semgrep
        run: |
          python -m pip install semgrep
          
      - name: Validate Rule Metadata
        run: |
          python tests/validate-rule-metadata.py
          
      - name: Run Rule Tests
        run: |
          python tests/run-all-tests.py --project-root . --skip-reports
          
      - name: Upload Test Results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results
          path: tests/test-results/
          
  performance-benchmarks:
    name: Performance Benchmarks
    runs-on: ubuntu-latest
    needs: quality-gates
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyyaml
          
      - name: Install Semgrep
        run: |
          python -m pip install semgrep
          
      - name: Run Performance Benchmarks
        run: |
          python tests/comprehensive-performance-test.py
          
      - name: Upload Performance Results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: performance-results
          path: tests/performance-results/
          
  corpus-validation:
    name: Corpus Validation
    runs-on: ubuntu-latest
    needs: quality-gates
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyyaml
          
      - name: Install Semgrep
        run: |
          python -m pip install semgrep
          
      - name: Validate Corpus
        run: |
          python tests/validate-corpus.py
          
      - name: Run Corpus Scans
        run: |
          python tests/run-corpus-scans.py
          
      - name: Upload Corpus Results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: corpus-results
          path: results/corpus-validation/
          
  security-review:
    name: Security Review
    runs-on: ubuntu-latest
    needs: [quality-gates, rule-validation, performance-benchmarks, corpus-validation]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyyaml
          
      - name: Install Semgrep
        run: |
          python -m pip install semgrep
          
      - name: Run Security Review
        run: |
          python tests/security-review.py
          
      - name: Generate Security Report
        run: |
          python tests/generate-security-report.py
          
      - name: Upload Security Report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: security-report
          path: results/security-review/
          
  final-validation:
    name: Final Validation
    runs-on: ubuntu-latest
    needs: [quality-gates, rule-validation, performance-benchmarks, corpus-validation, security-review]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyyaml
          
      - name: Install Semgrep
        run: |
          python -m pip install semgrep
          
      - name: Run Final Validation
        run: |
          python tests/final-validation.py
          
      - name: Generate Final Report
        run: |
          python tests/generate-final-report.py
          
      - name: Upload Final Report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: final-report
          path: results/final-validation/
          
      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const reportPath = 'results/final-validation/final-report.md';
            
            if (fs.existsSync(reportPath)) {
              const report = fs.readFileSync(reportPath, 'utf8');
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `## Quality Gates Report\n\n${report}`
              });
            }
