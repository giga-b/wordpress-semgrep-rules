rules:
- id: wp-ajax-missing-nonce-verification
  message: AJAX handler missing nonce verification - potential CSRF vulnerability
  severity: ERROR
  languages:
  - php
  patterns:
  - pattern: echo $DATA;
  - pattern-not: check_ajax_referer(...)
  - pattern-not: wp_verify_nonce(...)
  metadata:
    category: ajax-security
    cwe: CWE-352
    references:
    - https://developer.wordpress.org/plugins/security/nonces/
    - https://codex.wordpress.org/Function_Reference/check_ajax_referer
    confidence: high
    tags:
    - error
    - nonce
    - authentication
    - wordpress
    - csrf
    - security
    vuln_class: csrf

- id: wp-ajax-direct-output-xss
  message: AJAX handler directly outputting user input without sanitization - potential XSS vulnerability
  severity: ERROR
  languages:
  - php
  patterns:
  - pattern: echo $_POST[...];
  - pattern-not: esc_html(...)
  - pattern-not: esc_attr(...)
  - pattern-not: sanitize_text_field(...)
  metadata:
    category: ajax-security
    cwe: CWE-79
    references:
    - https://developer.wordpress.org/plugins/security/data-sanitization-escaping/
    confidence: high
    tags:
    - error
    - xss
    - output
    - wordpress
    - security
    vuln_class: xss

- id: wp-ajax-sql-injection
  message: AJAX handler using unsanitized user input in database queries - potential SQL injection
  severity: ERROR
  languages:
  - php
  patterns:
  - pattern: $wpdb->query($_POST[...]);
  - pattern-not: $wpdb->prepare(...)
  metadata:
    category: ajax-security
    cwe: CWE-89
    references:
    - https://developer.wordpress.org/plugins/security/data-validation-sanitization/
    confidence: high
    tags:
    - error
    - sql-injection
    - database
    - wordpress
    - security
    vuln_class: sql_injection

- id: wp-ajax-insecure-direct-object-reference
  message: AJAX handler accessing objects without proper authorization checks
  severity: ERROR
  languages:
  - php
  patterns:
  - pattern: wp_delete_user($_POST[...]);
  - pattern-not: current_user_can(...)
  - pattern-not: user_can(...)
  metadata:
    category: ajax-security
    cwe: CWE-285
    references:
    - https://developer.wordpress.org/plugins/security/checking-user-capabilities/
    confidence: high
    tags:
    - error
    - authorization
    - access-control
    - wordpress
    - security
    vuln_class: insecure_direct_object_reference

- id: wp-ajax-sensitive-data-exposure
  message: AJAX handler returning sensitive user data without proper filtering
  severity: ERROR
  languages:
  - php
  patterns:
  - pattern: echo json_encode(array('password' => $USER->user_pass));
  metadata:
    category: ajax-security
    cwe: CWE-200
    references:
    - https://developer.wordpress.org/plugins/security/data-sanitization-escaping/
    confidence: high
    tags:
    - error
    - sensitive-data
    - information-disclosure
    - wordpress
    - security
    vuln_class: sensitive_data_exposure

- id: wp-ajax-missing-content-type-validation
  message: AJAX handler missing content-type validation for file uploads
  severity: WARNING
  languages:
  - php
  patterns:
  - pattern: $upload = wp_handle_upload($file, array('test_form' => false));
  - pattern-not: $upload = wp_handle_upload($file, array('test_form' => false, 'mimes' => $ALLOWED_TYPES));
  metadata:
    category: ajax-security
    cwe: CWE-434
    references:
    - https://developer.wordpress.org/plugins/security/file-uploads/
    confidence: high
    tags:
    - warning
    - file-upload
    - wordpress
    - file_upload
    - validation
    - path-traversal
    - security
    vuln_class: file_upload

- id: wp-ajax-missing-error-handling
  message: AJAX handler missing proper error handling for user operations
  severity: WARNING
  languages:
  - php
  patterns:
  - pattern: $result = wp_update_user($userdata);
  - pattern: echo json_encode($result);
  - pattern-not: if (is_wp_error($result)) { ... }
  metadata:
    category: ajax-security
    cwe: CWE-388
    references:
    - https://developer.wordpress.org/plugins/security/error-handling/
    confidence: medium
    tags:
    - warning
    - error-handling
    - wordpress
    - security
    vuln_class: missing_error_handling

- id: wp-ajax-missing-rate-limiting
  message: AJAX handler missing rate limiting - vulnerable to brute force attacks
  severity: WARNING
  languages:
  - php
  patterns:
  - pattern: function $FUNC() { ... echo json_encode($RESULT); }
  - pattern-not: if (get_transient('rate_limit_' . $user_id)) { ... }
  metadata:
    category: ajax-security
    cwe: CWE-770
    references:
    - https://developer.wordpress.org/plugins/security/rate-limiting/
    confidence: medium
    tags:
    - warning
    - rate-limiting
    - brute-force
    - wordpress
    - security
    vuln_class: missing_rate_limiting

- id: wp-ajax-unsafe-json-response
  message: AJAX handler returning potentially unsafe data in JSON response
  severity: WARNING
  languages:
  - php
  patterns:
  - pattern: echo json_encode($RESULT);
  - pattern-not: esc_html(...)
  - pattern-not: esc_attr(...)
  - pattern-not: sanitize_text_field(...)
  metadata:
    category: ajax-security
    cwe: CWE-200
    references:
    - https://developer.wordpress.org/plugins/security/data-sanitization-escaping/
    confidence: medium
    tags:
    - warning
    - json
    - output
    - wordpress
    - security
    vuln_class: unsafe_json_response

- id: wp-ajax-weak-nonce-verification
  message: AJAX handler with weak nonce verification - use specific nonce action
  severity: WARNING
  languages:
  - php
  patterns:
  - pattern: check_ajax_referer('nonce', 'security');
  metadata:
    category: ajax-security
    cwe: CWE-352
    references:
    - https://developer.wordpress.org/plugins/security/nonces/
    confidence: medium
    tags:
    - warning
    - nonce
    - authentication
    - wordpress
    - csrf
    - security
    vuln_class: csrf
