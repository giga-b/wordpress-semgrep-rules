rules:
- id: wp-ajax-missing-nonce-verification
  message: AJAX handler missing nonce verification - potential CSRF vulnerability
  severity: ERROR
  languages:
  - php
  patterns:

  - pattern: "add_action('wp_ajax_$ACTION', '$HANDLER');\nfunction $HANDLER() {\n  ...\n\
    \  $DATA = $_POST['$FIELD'];\n  ...\n}\n"
  pattern-not: "add_action('wp_ajax_$ACTION', '$HANDLER');\nfunction $HANDLER() {\n\
    \  ...\n  check_ajax_referer('$NONCE', '$FIELD');\n  ...\n}\n"
  metadata:
    category: ajax-security
    cwe: CWE-352
    references:
    - https://developer.wordpress.org/plugins/security/nonces/
    - https://codex.wordpress.org/Function_Reference/check_ajax_referer
    confidence: high
    tags:
    - error
    - nonce
    - authentication
    - wordpress
    - csrf
    - security
    vuln_class: csrf
- id: wp-ajax-missing-capability-check
  message: AJAX handler missing capability check - potential authorization bypass
  severity: ERROR
  languages:
  - php
  patterns:

  - pattern: "add_action('wp_ajax_$ACTION', '$HANDLER');\nfunction $HANDLER() {\n  ...\n\
    \  $DATA = $_POST['$FIELD'];\n  ...\n}\n"
  pattern-not: "add_action('wp_ajax_$ACTION', '$HANDLER');\nfunction $HANDLER() {\n\
    \  ...\n  if (!current_user_can('$CAPABILITY')) {\n    wp_die('Unauthorized');\n\
    \  }\n  ...\n}\n"
  metadata:
    category: ajax-security
    cwe: CWE-285
    references:
    - https://developer.wordpress.org/plugins/security/checking-user-capabilities/
    confidence: high
    tags:
    - error
    - wordpress
    - authorization
    - capability
    - permissions
    - authz
    - security
    vuln_class: authz
- id: wp-ajax-direct-output-xss
  message: Direct output of AJAX data without sanitization - XSS vulnerability
  severity: ERROR
  languages:
  - php
  patterns:

  - pattern: "add_action('wp_ajax_$ACTION', '$HANDLER');\nfunction $HANDLER() {\n  ...\n\
    \  $DATA = $_POST['$FIELD'];\n  echo $DATA;\n  ...\n}\n"
  pattern-not: "add_action('wp_ajax_$ACTION', '$HANDLER');\nfunction $HANDLER() {\n\
    \  ...\n  $DATA = $_POST['$FIELD'];\n  echo esc_html($DATA);\n  ...\n}\n"
  metadata:
    category: ajax-security
    cwe: CWE-79
    references:
    - https://developer.wordpress.org/plugins/security/securing-output/
    confidence: high
    tags:
    - error
    - wordpress
    - escaping
    - xss
    - html
    - security
    vuln_class: xss
- id: wp-ajax-weak-nonce-verification
  message: AJAX handler with weak nonce verification - use specific nonce action
  severity: WARNING
  languages:
  - php
  patterns:

  - pattern: "add_action('wp_ajax_$ACTION', '$HANDLER');\nfunction $HANDLER() {\n  ...\n\
    \  check_ajax_referer('nonce', '$FIELD');\n  ...\n}\n"
  pattern-not: "add_action('wp_ajax_$ACTION', '$HANDLER');\nfunction $HANDLER() {\n\
    \  ...\n  check_ajax_referer('$SPECIFIC_ACTION', '$FIELD');\n  ...\n}\n"
  metadata:
    category: ajax-security
    cwe: CWE-352
    references:
    - https://developer.wordpress.org/plugins/security/nonces/
    confidence: high
    tags:
    - warning
    - nonce
    - authentication
    - wordpress
    - csrf
    - security
    vuln_class: csrf
- id: wp-ajax-missing-input-sanitization
  message: AJAX handler missing input sanitization - potential injection vulnerability
  severity: ERROR
  languages:
  - php
  patterns:

  - pattern: "add_action('wp_ajax_$ACTION', '$HANDLER');\nfunction $HANDLER() {\n  ...\n\
    \  $DATA = $_POST['$FIELD'];\n  $RESULT = some_function($DATA);\n  ...\n}\n"
  pattern-not: "add_action('wp_ajax_$ACTION', '$HANDLER');\nfunction $HANDLER() {\n\
    \  ...\n  $DATA = sanitize_text_field($_POST['$FIELD']);\n  $RESULT = some_function($DATA);\n\
    \  ...\n}\n"
  metadata:
    category: ajax-security
    cwe: CWE-20
    references:
    - https://developer.wordpress.org/plugins/security/data-sanitization-escaping/
    confidence: high
    tags:
    - error
    - rest_ajax
    - wordpress
    - ajax
    - endpoints
    - security
    - rest-api
    vuln_class: rest_ajax
- id: wp-ajax-sql-injection-risk
  message: AJAX handler with potential SQL injection - use prepared statements
  severity: ERROR
  languages:
  - php
  patterns:

  - pattern: "add_action('wp_ajax_$ACTION', '$HANDLER');\nfunction $HANDLER() {\n  global\
    \ $wpdb;\n  ...\n  $DATA = $_POST['$FIELD'];\n  $RESULT = $wpdb->get_results(\"\
    SELECT * FROM $TABLE WHERE field = '$DATA'\");\n  ...\n}\n"
  pattern-not: "add_action('wp_ajax_$ACTION', '$HANDLER');\nfunction $HANDLER() {\n\
    \  global $wpdb;\n  ...\n  $DATA = sanitize_text_field($_POST['$FIELD']);\n  $RESULT\
    \ = $wpdb->get_results($wpdb->prepare(\"SELECT * FROM $TABLE WHERE field = %s\"\
    , $DATA));\n  ...\n}\n"
  metadata:
    category: ajax-security
    cwe: CWE-89
    references:
    - https://developer.wordpress.org/plugins/security/data-validation/
    confidence: high
    tags:
    - error
    - sql-injection
    - wordpress
    - sqli
    - wpdb
    - database
    - security
    vuln_class: sqli
- id: wp-ajax-unsafe-file-upload
  message: AJAX handler with unsafe file upload - missing validation and sanitization
  severity: ERROR
  languages:
  - php
  patterns:

  - pattern: "add_action('wp_ajax_$ACTION', '$HANDLER');\nfunction $HANDLER() {\n  ...\n\
    \  $FILE = $_FILES['$FIELD'];\n  move_uploaded_file($FILE['tmp_name'], $FILE['name']);\n\
    \  ...\n}\n"
  pattern-not: "add_action('wp_ajax_$ACTION', '$HANDLER');\nfunction $HANDLER() {\n\
    \  ...\n  $FILE = $_FILES['$FIELD'];\n  $UPLOAD = wp_handle_upload($FILE, array('test_form'\
    \ => false));\n  ...\n}\n"
  metadata:
    category: ajax-security
    cwe: CWE-434
    references:
    - https://developer.wordpress.org/plugins/security/file-uploads/
    confidence: high
    tags:
    - error
    - file-upload
    - wordpress
    - file_upload
    - validation
    - path-traversal
    - security
    vuln_class: file_upload
- id: wp-ajax-sensitive-data-exposure
  message: AJAX handler exposing sensitive data without proper authorization
  severity: ERROR
  languages:
  - php
  patterns:

  - pattern: "add_action('wp_ajax_$ACTION', '$HANDLER');\nfunction $HANDLER() {\n  ...\n\
    \  $USER = get_user_by('id', $_POST['user_id']);\n  echo json_encode(array(\n\
    \    'password' => $USER->user_pass,\n    'email' => $USER->user_email\n  ));\n\
    \  ...\n}\n"
  pattern-not: "add_action('wp_ajax_$ACTION', '$HANDLER');\nfunction $HANDLER() {\n\
    \  ...\n  if (!current_user_can('manage_users')) {\n    wp_die('Unauthorized');\n\
    \  }\n  $USER = get_user_by('id', intval($_POST['user_id']));\n  echo json_encode(array(\n\
    \    'id' => $USER->ID,\n    'email' => $USER->user_email\n  ));\n  ...\n}\n"
  metadata:
    category: ajax-security
    cwe: CWE-200
    references:
    - https://developer.wordpress.org/plugins/security/data-validation/
    confidence: high
    tags:
    - error
    - rest_ajax
    - wordpress
    - ajax
    - endpoints
    - security
    - rest-api
    vuln_class: rest_ajax
- id: wp-ajax-missing-error-handling
  message: AJAX handler missing proper error handling - potential information disclosure
  severity: WARNING
  languages:
  - php
  patterns:

  - pattern: "add_action('wp_ajax_$ACTION', '$HANDLER');\nfunction $HANDLER() {\n  ...\n\
    \  $RESULT = some_operation($_POST['$FIELD']);\n  echo $RESULT;\n  ...\n}\n"
  pattern-not: "add_action('wp_ajax_$ACTION', '$HANDLER');\nfunction $HANDLER() {\n\
    \  ...\n  try {\n    $RESULT = some_operation($_POST['$FIELD']);\n    wp_send_json_success($RESULT);\n\
    \  } catch (Exception $e) {\n    wp_send_json_error('Operation failed');\n  }\n\
    \  ...\n}\n"
  metadata:
    category: ajax-security
    cwe: CWE-209
    references:
    - https://developer.wordpress.org/plugins/security/error-handling/
    confidence: high
    tags:
    - warning
    - rest_ajax
    - wordpress
    - ajax
    - endpoints
    - security
    - rest-api
    vuln_class: rest_ajax
- id: wp-ajax-insecure-direct-object-reference
  message: AJAX handler with insecure direct object reference - missing ownership
    validation
  severity: ERROR
  languages:
  - php
  patterns:

  - pattern: "add_action('wp_ajax_$ACTION', '$HANDLER');\nfunction $HANDLER() {\n  ...\n\
    \  $POST_ID = $_POST['post_id'];\n  $POST = get_post($POST_ID);\n  echo json_encode($POST);\n\
    \  ...\n}\n"
  pattern-not: "add_action('wp_ajax_$ACTION', '$HANDLER');\nfunction $HANDLER() {\n\
    \  ...\n  $POST_ID = intval($_POST['post_id']);\n  $POST = get_post($POST_ID);\n\
    \  if (!$POST || $POST->post_author != get_current_user_id()) {\n    wp_die('Unauthorized');\n\
    \  }\n  echo json_encode($POST);\n  ...\n}\n"
  metadata:
    category: ajax-security
    cwe: CWE-639
    references:
    - https://developer.wordpress.org/plugins/security/data-validation/
    confidence: high
    tags:
    - error
    - rest_ajax
    - wordpress
    - ajax
    - endpoints
    - security
    - rest-api
    vuln_class: rest_ajax
- id: wp-ajax-missing-rate-limiting
  message: AJAX handler missing rate limiting - potential abuse vulnerability
  severity: WARNING
  languages:
  - php
  patterns:

  - pattern: "add_action('wp_ajax_$ACTION', '$HANDLER');\nfunction $HANDLER() {\n  ...\n\
    \  $RESULT = expensive_operation($_POST['$FIELD']);\n  echo json_encode($RESULT);\n\
    \  ...\n}\n"
  pattern-not: "add_action('wp_ajax_$ACTION', '$HANDLER');\nfunction $HANDLER() {\n\
    \  ...\n  $USER_ID = get_current_user_id();\n  $RATE_KEY = \"rate_limit_$USER_ID\"\
    ;\n  if (get_transient($RATE_KEY)) {\n    wp_die('Rate limit exceeded');\n  }\n\
    \  set_transient($RATE_KEY, true, 60);\n  $RESULT = expensive_operation($_POST['$FIELD']);\n\
    \  echo json_encode($RESULT);\n  ...\n}\n"
  metadata:
    category: ajax-security
    cwe: CWE-770
    references:
    - https://developer.wordpress.org/plugins/security/rate-limiting/
    confidence: high
    tags:
    - warning
    - rest_ajax
    - wordpress
    - ajax
    - endpoints
    - security
    - rest-api
    vuln_class: rest_ajax
- id: wp-ajax-unsafe-json-response
  message: AJAX handler with unsafe JSON response - use wp_send_json functions
  severity: WARNING
  languages:
  - php
  patterns:

  - pattern: "add_action('wp_ajax_$ACTION', '$HANDLER');\nfunction $HANDLER() {\n  ...\n\
    \  $RESULT = array('data' => $_POST['$FIELD']);\n  echo json_encode($RESULT);\n\
    \  wp_die();\n  ...\n}\n"
  pattern-not: "add_action('wp_ajax_$ACTION', '$HANDLER');\nfunction $HANDLER() {\n\
    \  ...\n  $RESULT = array('data' => sanitize_text_field($_POST['$FIELD']));\n\
    \  wp_send_json_success($RESULT);\n  ...\n}\n"
  metadata:
    category: ajax-security
    cwe: CWE-79
    references:
    - https://developer.wordpress.org/plugins/security/securing-output/
    confidence: high
    tags:
    - warning
    - rest_ajax
    - wordpress
    - ajax
    - endpoints
    - security
    - rest-api
    vuln_class: rest_ajax
- id: wp-ajax-missing-csrf-protection
  message: AJAX handler for non-logged users missing CSRF protection
  severity: ERROR
  languages:
  - php
  patterns:

  - pattern: "add_action('wp_ajax_nopriv_$ACTION', '$HANDLER');\nfunction $HANDLER()\
    \ {\n  ...\n  $DATA = $_POST['$FIELD'];\n  process_data($DATA);\n  ...\n}\n"
  pattern-not: "add_action('wp_ajax_nopriv_$ACTION', '$HANDLER');\nfunction $HANDLER()\
    \ {\n  ...\n  check_ajax_referer('$NONCE', '$FIELD');\n  $DATA = sanitize_text_field($_POST['$FIELD']);\n\
    \  process_data($DATA);\n  ...\n}\n"
  metadata:
    category: ajax-security
    cwe: CWE-352
    references:
    - https://developer.wordpress.org/plugins/security/nonces/
    confidence: high
    tags:
    - error
    - nonce
    - authentication
    - wordpress
    - csrf
    - security
    vuln_class: csrf
- id: wp-ajax-unsafe-redirect
  message: AJAX handler with unsafe redirect - potential open redirect vulnerability
  severity: ERROR
  languages:
  - php
  patterns:

  - pattern: "add_action('wp_ajax_$ACTION', '$HANDLER');\nfunction $HANDLER() {\n  ...\n\
    \  $URL = $_POST['redirect_url'];\n  wp_redirect($URL);\n  exit;\n  ...\n}\n"
  pattern-not: "add_action('wp_ajax_$ACTION', '$HANDLER');\nfunction $HANDLER() {\n\
    \  ...\n  $URL = esc_url_raw($_POST['redirect_url']);\n  if (wp_http_validate_url($URL))\
    \ {\n    wp_redirect($URL);\n    exit;\n  }\n  ...\n}\n"
  metadata:
    category: ajax-security
    cwe: CWE-601
    references:
    - https://developer.wordpress.org/plugins/security/data-validation/
    confidence: high
    tags:
    - error
    - rest_ajax
    - wordpress
    - ajax
    - endpoints
    - security
    - rest-api
    vuln_class: rest_ajax
- id: wp-ajax-missing-content-type-validation
  message: AJAX handler missing content-type validation for file uploads
  severity: WARNING
  languages:
  - php
  patterns:

  - pattern: "add_action('wp_ajax_$ACTION', '$HANDLER');\nfunction $HANDLER() {\n  ...\n\
    \  $FILE = $_FILES['$FIELD'];\n  $UPLOAD = wp_handle_upload($FILE, array('test_form'\
    \ => false));\n  ...\n}\n"
  pattern-not: "add_action('wp_ajax_$ACTION', '$HANDLER');\nfunction $HANDLER() {\n\
    \  ...\n  $FILE = $_FILES['$FIELD'];\n  $ALLOWED_TYPES = array('image/jpeg', 'image/png',\
    \ 'image/gif');\n  if (!in_array($FILE['type'], $ALLOWED_TYPES)) {\n    wp_die('Invalid\
    \ file type');\n  }\n  $UPLOAD = wp_handle_upload($FILE, array('test_form' =>\
    \ false));\n  ...\n}\n"
  metadata:
    category: ajax-security
    cwe: CWE-434
    references:
    - https://developer.wordpress.org/plugins/security/file-uploads/
    confidence: high
    tags:
    - warning
    - file-upload
    - wordpress
    - file_upload
    - validation
    - path-traversal
    - security
    vuln_class: file_upload
