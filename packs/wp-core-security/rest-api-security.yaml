rules:
- id: wordpress.rest-api.missing-authentication
  languages:
  - php
  message: REST API endpoint missing proper authentication. Use a proper permission_callback
    function.
  severity: ERROR
  metadata:
    category: rest-api-security
    cwe: CWE-287
    references:
    - https://developer.wordpress.org/rest-api/extending-the-rest-api/adding-custom-endpoints/#permissions-callback
    confidence: high
    tags:
    - error
    - wordpress
    - authorization
    - capability
    - permissions
    - authz
    - security
    vuln_class: authz
  patterns:
  - pattern: "register_rest_route($namespace, $route, array(\n  'methods' => $methods,\n\
      \  'callback' => $callback,\n  'permission_callback' => '__return_true'\n));\n"
  - pattern: "register_rest_route($namespace, $route, array(\n  'methods' => $methods,\n\
      \  'callback' => $callback,\n  'permission_callback' => function() { return\
      \ true; }\n));\n"
  - pattern: "register_rest_route($namespace, $route, array(\n  'methods' => $methods,\n\
      \  'callback' => $callback\n));\n"
- id: wordpress.rest-api.weak-authentication
  languages:
  - php
  message: REST API endpoint has weak authentication. Use proper capability checks
    or nonce verification.
  severity: WARNING
  metadata:
    category: rest-api-security
    cwe: CWE-287
    confidence: high
    tags:
    - warning
    - nonce
    - authentication
    - wordpress
    - csrf
    - security
    vuln_class: csrf
  patterns:
  - pattern: "register_rest_route($namespace, $route, array(\n  'permission_callback'\
      \ => function($request) {\n    return true;\n  }\n));\n"
- id: wordpress.rest-api.missing-input-validation
  languages:
  - php
  message: REST API endpoint missing input validation. Validate and sanitize all input
    parameters.
  severity: ERROR
  metadata:
    category: rest-api-security
    cwe: CWE-20
    confidence: high
    tags:
    - error
    - wordpress
    - security
    - other
    vuln_class: other
  patterns:
  - pattern: "function $FUNC($request) {\n  $param = $request->get_param('$PARAM');\n\
      \  return $param;\n}\n"
- id: wordpress.rest-api.direct-param-output
  languages:
  - php
  message: REST API endpoint directly outputs user input. Sanitize and validate all
    output.
  severity: ERROR
  metadata:
    category: rest-api-security
    cwe: CWE-79
    confidence: high
    tags:
    - error
    - wordpress
    - escaping
    - xss
    - html
    - security
    vuln_class: xss
  patterns:
  - pattern: "function $FUNC($request) {\n  $param = $request->get_param('$PARAM');\n\
      \  echo $param;\n}\n"
  - pattern: "function $FUNC($request) {\n  $param = $request->get_param('$PARAM');\n\
      \  print $param;\n}\n"
  - pattern: "function $FUNC($request) {\n  $param = $request->get_param('$PARAM');\n\
      \  return array('data' => $param);\n}\n"
- id: wordpress.rest-api.missing-nonce
  languages:
  - php
  message: REST API endpoint missing nonce verification for state-changing operations.
  severity: ERROR
  metadata:
    category: rest-api-security
    cwe: CWE-352
    confidence: high
    tags:
    - error
    - nonce
    - authentication
    - wordpress
    - csrf
    - security
    vuln_class: csrf
  patterns:
  - pattern: "register_rest_route($NAMESPACE, '/$ENDPOINT', array(\n  'methods' =>\
      \ 'POST',\n  'callback' => $CALLBACK,\n  'permission_callback' => function($request)\
      \ {\n    return current_user_can('$CAPABILITY');\n  }\n));\n"
- id: wordpress.rest-api.sql-injection-risk
  languages:
  - php
  message: REST API endpoint may be vulnerable to SQL injection. Use prepared statements.
  severity: ERROR
  metadata:
    category: rest-api-security
    cwe: CWE-89
    confidence: high
    tags:
    - error
    - sql-injection
    - wordpress
    - sqli
    - wpdb
    - database
    - security
    vuln_class: sqli
  patterns:
  - pattern: "function $FUNC($request) {\n  global $wpdb;\n  $param = $request->get_param('$PARAM');\n\
      \  $result = $wpdb->get_results(\"SELECT * FROM $wpdb->posts WHERE post_title\
      \ = '$param'\");\n  return $result;\n}\n"
  - pattern: "function $FUNC($request) {\n  global $wpdb;\n  $param = $request->get_param('$PARAM');\n\
      \  $result = $wpdb->query(\"UPDATE $wpdb->posts SET post_title = '$param' WHERE\
      \ ID = 1\");\n  return $result;\n}\n"
- id: wordpress.rest-api.unsafe-file-upload
  languages:
  - php
  message: REST API endpoint has unsafe file upload handling. Validate file types
    and use proper upload functions.
  severity: ERROR
  metadata:
    category: rest-api-security
    cwe: CWE-434
    confidence: high
    tags:
    - error
    - file-upload
    - wordpress
    - file_upload
    - validation
    - path-traversal
    - security
    vuln_class: file_upload
  patterns:
  - pattern: "function $FUNC($request) {\n  $file = $_FILES['file'];\n  move_uploaded_file($file['tmp_name'],\
      \ '/path/to/upload/' . $file['name']);\n  return 'File uploaded';\n}\n"
- id: wordpress.rest-api.missing-rate-limiting
  languages:
  - php
  message: REST API endpoint missing rate limiting. Implement rate limiting for public
    endpoints.
  severity: WARNING
  metadata:
    category: rest-api-security
    cwe: CWE-770
    confidence: high
    tags:
    - warning
    - wordpress
    - security
    - other
    vuln_class: other
  patterns:
  - pattern: "register_rest_route($namespace, '/public/$endpoint', array(\n  'methods'\
      \ => 'GET',\n  'callback' => $callback,\n  'permission_callback' => '__return_true'\n\
      ));\n"
- id: wordpress.rest-api.unsafe-cors
  languages:
  - php
  message: REST API endpoint has unsafe CORS configuration. Restrict origins and methods.
  severity: WARNING
  metadata:
    category: rest-api-security
    cwe: CWE-942
    confidence: high
    tags:
    - warning
    - wordpress
    - security
    - other
    vuln_class: other
  patterns:
  - pattern: "add_action('rest_api_init', function() {\n  header('Access-Control-Allow-Origin:\
      \ *');\n  header('Access-Control-Allow-Methods: GET, POST, PUT, DELETE');\n\
      });\n"
  - pattern-not: "add_action('rest_api_init', function() {\n  $allowed_origins = array('https://trusted-site.com');\n\
      \  $origin = $_SERVER['HTTP_ORIGIN'] ?? '';\n  if (in_array($origin, $allowed_origins))\
      \ {\n    header('Access-Control-Allow-Origin: ' . $origin);\n  }\n});\n"
- id: wordpress.rest-api.error-disclosure
  languages:
  - php
  message: REST API endpoint may disclose sensitive information in error responses.
  severity: WARNING
  metadata:
    category: rest-api-security
    cwe: CWE-209
    confidence: high
    tags:
    - warning
    - wordpress
    - security
    - other
    vuln_class: other
  patterns:
  - pattern: "function $FUNC($request) {\n  try {\n    $result = some_operation();\n\
      \    return $result;\n  } catch (Exception $e) {\n    return array('error' =>\
      \ $e->getMessage(), 'file' => $e->getFile(), 'line' => $e->getLine());\n  }\n\
      }\n"
- id: wordpress.rest-api.sensitive-data-exposure
  languages:
  - php
  message: REST API endpoint may expose sensitive data. Filter sensitive information
    from responses.
  severity: WARNING
  metadata:
    category: rest-api-security
    cwe: CWE-200
    confidence: high
    tags:
    - warning
    - wordpress
    - security
    - other
    vuln_class: other
  patterns:
  - pattern: "function $FUNC($request) {\n  $user = get_user_by('id', $request->get_param('user_id'));\n\
      \  return array(\n    'id' => $user->ID,\n    'user_login' => $user->user_login,\n\
      \    'user_pass' => $user->user_pass,\n    'user_email' => $user->user_email\n\
      \  );\n}\n"
- id: wordpress.rest-api.unsafe-methods
  languages:
  - php
  message: REST API endpoint allows unsafe HTTP methods. Restrict methods to only
    what's necessary.
  severity: WARNING
  metadata:
    category: rest-api-security
    cwe: CWE-650
    confidence: high
    tags:
    - warning
    - wordpress
    - security
    - other
    vuln_class: other
  patterns:
  - pattern: "register_rest_route($namespace, '/$endpoint', array(\n  'methods' =>\
      \ 'GET, POST, PUT, DELETE, PATCH, OPTIONS',\n  'callback' => $callback\n));\n"
- id: wordpress.rest-api.weak-namespace
  languages:
  - php
  message: REST API namespace is too generic. Use a specific, unique namespace for
    your plugin/theme.
  severity: INFO
  metadata:
    category: rest-api-security
    cwe: CWE-200
    confidence: high
    tags:
    - info
    - wordpress
    - security
    - other
    vuln_class: other
  patterns:
  - pattern: register_rest_route('api/v1', $route, $args)
  - pattern: register_rest_route('rest/v1', $route, $args)
  - pattern: register_rest_route('wp/v1', $route, $args)
- id: wordpress.rest-api.missing-sanitization
  languages:
  - php
  message: REST API endpoint missing proper sanitization. Sanitize all user input
    before processing.
  severity: ERROR
  metadata:
    category: rest-api-security
    cwe: CWE-20
    confidence: high
    tags:
    - error
    - wordpress
    - security
    - other
    vuln_class: other
  patterns:
  - pattern: "function $FUNC($request) {\n  $param = $request->get_param('$PARAM');\n\
      \  $result = process_data($param);\n  return $result;\n}\n"
- id: wordpress.rest-api.missing-security-headers
  languages:
  - php
  message: REST API endpoint missing security headers. Add appropriate security headers
    to responses.
  severity: INFO
  metadata:
    category: rest-api-security
    cwe: CWE-693
    confidence: high
    tags:
    - info
    - wordpress
    - security
    - other
    vuln_class: other
  patterns:
  - pattern: "function $FUNC($request) {\n  $data = get_data();\n  return $data;\n\
      }\n"
