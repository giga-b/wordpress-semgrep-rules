rules:
- id: wordpress.capability.missing-check
  languages:
  - php
  message: Missing capability check. Use current_user_can() to verify user permissions
    before performing sensitive operations.
  severity: ERROR
  metadata:
    category: capability-checks
    cwe: CWE-285
    confidence: high
    tags:
    - error
    - wordpress
    - authorization
    - capability
    - permissions
    - authz
    - security
    vuln_class: authz
  patterns:
  - pattern: "if (isset($_POST['delete_user'])) {\n  wp_delete_user($user_id);\n}\n"
  - pattern-not: "if (isset($_POST['delete_user'])) {\n  if (current_user_can('delete_users'))\
      \ {\n    wp_delete_user($user_id);\n  }\n}\n"
- id: wordpress.capability.missing-admin-check
  languages:
  - php
  message: Missing admin capability check. Use current_user_can('manage_options')
    for admin-only operations.
  severity: ERROR
  metadata:
    category: capability-checks
    cwe: CWE-285
    confidence: high
    tags:
    - error
    - wordpress
    - authorization
    - capability
    - permissions
    - authz
    - security
    vuln_class: authz
  patterns:
  - pattern: "if (isset($_POST['update_settings'])) {\n  update_option('sensitive_setting',\
      \ $_POST['value']);\n}\n"
  - pattern-not: "if (isset($_POST['update_settings'])) {\n  if (current_user_can('manage_options'))\
      \ {\n    update_option('sensitive_setting', sanitize_text_field($_POST['value']));\n\
      \  }\n}\n"
- id: wordpress.capability.weak-check
  languages:
  - php
  message: Weak capability check. Use specific capabilities instead of generic checks.
  severity: WARNING
  metadata:
    category: capability-checks
    cwe: CWE-285
    confidence: high
    tags:
    - warning
    - wordpress
    - authorization
    - capability
    - permissions
    - authz
    - security
    vuln_class: authz
  patterns:
  - pattern: current_user_can('read')
  - pattern: current_user_can('edit_posts')
  - pattern: current_user_can('publish_posts')
- id: wordpress.capability.overly-permissive
  languages:
  - php
  message: Overly permissive capability check. Use more specific capabilities for
    sensitive operations.
  severity: WARNING
  metadata:
    category: capability-checks
    cwe: CWE-285
    confidence: high
    tags:
    - warning
    - wordpress
    - authorization
    - capability
    - permissions
    - authz
    - security
    vuln_class: authz
  patterns:
  - pattern: "if (current_user_can('edit_posts')) {\n  wp_delete_user($user_id);\n\
      }\n"
  - pattern: "if (current_user_can('publish_posts')) {\n  update_option('admin_setting',\
      \ $_POST['value']);\n}\n"
- id: wordpress.capability.missing-nonce
  languages:
  - php
  message: Capability check without nonce verification. Always verify nonces for form
    submissions.
  severity: ERROR
  metadata:
    category: capability-checks
    cwe: CWE-352
    confidence: high
    tags:
    - error
    - nonce
    - authentication
    - wordpress
    - csrf
    - security
    vuln_class: csrf
  patterns:
  - pattern: "if (current_user_can('manage_options')) {\n  if (isset($_POST['submit']))\
      \ {\n    update_option('setting', $_POST['value']);\n  }\n}\n"
  - pattern-not: "if (current_user_can('manage_options')) {\n  if (isset($_POST['submit']))\
      \ {\n    if (wp_verify_nonce($_POST['_wpnonce'], 'update_settings')) {\n   \
      \   update_option('setting', sanitize_text_field($_POST['value']));\n    }\n\
      \  }\n}\n"
- id: wordpress.capability.ajax-missing
  languages:
  - php
  message: AJAX handler missing capability check. Verify user permissions in AJAX
    callbacks.
  severity: ERROR
  metadata:
    category: capability-checks
    cwe: CWE-285
    confidence: high
    tags:
    - error
    - wordpress
    - authorization
    - capability
    - permissions
    - authz
    - security
    vuln_class: authz
  patterns:
  - pattern: "add_action('wp_ajax_delete_user', 'delete_user_callback');\nfunction\
      \ delete_user_callback() {\n  wp_delete_user($_POST['user_id']);\n}\n"
  - pattern-not: "add_action('wp_ajax_delete_user', 'delete_user_callback');\nfunction\
      \ delete_user_callback() {\n  if (current_user_can('delete_users')) {\n    wp_delete_user(intval($_POST['user_id']));\n\
      \  }\n}\n"
- id: wordpress.capability.ajax-weak
  languages:
  - php
  message: Weak AJAX capability check. Use specific capabilities for AJAX operations.
  severity: WARNING
  metadata:
    category: capability-checks
    cwe: CWE-285
    confidence: high
    tags:
    - warning
    - wordpress
    - authorization
    - capability
    - permissions
    - authz
    - security
    vuln_class: authz
  patterns:
  - pattern: "function ajax_callback() {\n  if (current_user_can('read')) {\n    //\
      \ Perform sensitive operation\n  }\n}\n"
- id: wordpress.capability.rest-missing
  languages:
  - php
  message: REST API endpoint missing capability check. Implement proper permission_callback
    for security.
  severity: ERROR
  metadata:
    category: capability-checks
    cwe: CWE-285
    confidence: high
    tags:
    - error
    - wordpress
    - authorization
    - capability
    - permissions
    - authz
    - security
    vuln_class: authz
  patterns:
  - pattern: "register_rest_route('my-namespace/v1', '/users', array(\n  'methods'\
      \ => 'DELETE',\n  'callback' => 'delete_user_rest',\n  'permission_callback'\
      \ => '__return_true'\n));\n"
  - pattern-not: "register_rest_route('my-namespace/v1', '/users', array(\n  'methods'\
      \ => 'DELETE',\n  'callback' => 'delete_user_rest',\n  'permission_callback'\
      \ => function() {\n    return current_user_can('delete_users');\n  }\n));\n"
- id: wordpress.capability.role-check-instead
  languages:
  - php
  message: Using user role check instead of capability check. Use current_user_can()
    for better security.
  severity: WARNING
  metadata:
    category: capability-checks
    cwe: CWE-285
    confidence: high
    tags:
    - warning
    - wordpress
    - authorization
    - capability
    - permissions
    - authz
    - security
    vuln_class: authz
  patterns:
  - pattern: "if (current_user_can('administrator')) {\n  // Admin operation\n}\n"
  - pattern: "if (current_user_can('editor')) {\n  // Editor operation\n}\n"
  - pattern: "if (current_user_can('author')) {\n  // Author operation\n}\n"
- id: wordpress.capability.role-comparison
  languages:
  - php
  message: Direct role comparison is insecure. Use current_user_can() for capability
    checks.
  severity: ERROR
  metadata:
    category: capability-checks
    cwe: CWE-285
    confidence: high
    tags:
    - error
    - wordpress
    - authorization
    - capability
    - permissions
    - authz
    - security
    vuln_class: authz
  patterns:
  - pattern: "if ($user->roles[0] === 'administrator') {\n  // Admin operation\n}\n"
  - pattern: "if (in_array('administrator', $user->roles)) {\n  // Admin operation\n\
      }\n"
- id: wordpress.capability.conditional-missing
  languages:
  - php
  message: Missing capability check in conditional logic. Always verify permissions
    before sensitive operations.
  severity: ERROR
  metadata:
    category: capability-checks
    cwe: CWE-285
    confidence: high
    tags:
    - error
    - wordpress
    - authorization
    - capability
    - permissions
    - authz
    - security
    vuln_class: authz
  patterns:
  - pattern: "if ($action === 'delete') {\n  wp_delete_user($user_id);\n} elseif ($action\
      \ === 'update') {\n  wp_update_user($user_data);\n}\n"
  - pattern-not: "if ($action === 'delete' && current_user_can('delete_users')) {\n\
      \  wp_delete_user($user_id);\n} elseif ($action === 'update' && current_user_can('edit_users'))\
      \ {\n  wp_update_user($user_data);\n}\n"
- id: wordpress.capability.file-operation-missing
  languages:
  - php
  message: File operation missing capability check. Verify user permissions before
    file operations.
  severity: ERROR
  metadata:
    category: capability-checks
    cwe: CWE-285
    confidence: high
    tags:
    - error
    - wordpress
    - authorization
    - capability
    - permissions
    - authz
    - security
    vuln_class: authz
  patterns:
  - pattern: "if (isset($_POST['upload_file'])) {\n  move_uploaded_file($_FILES['file']['tmp_name'],\
      \ $destination);\n}\n"
  - pattern-not: "if (isset($_POST['upload_file'])) {\n  if (current_user_can('upload_files'))\
      \ {\n    move_uploaded_file($_FILES['file']['tmp_name'], $destination);\n  }\n\
      }\n"
- id: wordpress.capability.db-operation-missing
  languages:
  - php
  message: Database operation missing capability check. Verify user permissions before
    database operations.
  severity: ERROR
  metadata:
    category: capability-checks
    cwe: CWE-285
    confidence: high
    tags:
    - error
    - wordpress
    - authorization
    - capability
    - permissions
    - authz
    - security
    vuln_class: authz
  patterns:
  - pattern: "if (isset($_POST['delete_option'])) {\n  delete_option($_POST['option_name']);\n\
      }\n"
  - pattern-not: "if (isset($_POST['delete_option'])) {\n  if (current_user_can('manage_options'))\
      \ {\n    delete_option(sanitize_text_field($_POST['option_name']));\n  }\n}\n"
- id: wordpress.capability.plugin-management-missing
  languages:
  - php
  message: Plugin management operation missing capability check. Use 'activate_plugins'
    or 'install_plugins' capabilities.
  severity: ERROR
  metadata:
    category: capability-checks
    cwe: CWE-285
    confidence: high
    tags:
    - error
    - wordpress
    - authorization
    - capability
    - permissions
    - authz
    - security
    vuln_class: authz
  patterns:
  - pattern: "if (isset($_POST['activate_plugin'])) {\n  activate_plugin($_POST['plugin_file']);\n\
      }\n"
  - pattern-not: "if (isset($_POST['activate_plugin'])) {\n  if (current_user_can('activate_plugins'))\
      \ {\n    activate_plugin(sanitize_text_field($_POST['plugin_file']));\n  }\n\
      }\n"
- id: wordpress.capability.user-management-missing
  languages:
  - php
  message: User management operation missing capability check. Use appropriate user
    management capabilities.
  severity: ERROR
  metadata:
    category: capability-checks
    cwe: CWE-285
    confidence: high
    tags:
    - error
    - wordpress
    - authorization
    - capability
    - permissions
    - authz
    - security
    vuln_class: authz
  patterns:
  - pattern: "if (isset($_POST['create_user'])) {\n  wp_insert_user($_POST['user_data']);\n\
      }\n"
  - pattern-not: "if (isset($_POST['create_user'])) {\n  if (current_user_can('create_users'))\
      \ {\n    wp_insert_user($_POST['user_data']);\n  }\n}\n"
- id: wordpress.capability.content-management-missing
  languages:
  - php
  message: Content management operation missing capability check. Use appropriate
    content management capabilities.
  severity: ERROR
  metadata:
    category: capability-checks
    cwe: CWE-285
    confidence: high
    tags:
    - error
    - wordpress
    - authorization
    - capability
    - permissions
    - authz
    - security
    vuln_class: authz
  patterns:
  - pattern: "if (isset($_POST['publish_post'])) {\n  wp_publish_post($_POST['post_id']);\n\
      }\n"
  - pattern-not: "if (isset($_POST['publish_post'])) {\n  if (current_user_can('publish_posts'))\
      \ {\n    wp_publish_post(intval($_POST['post_id']));\n  }\n}\n"
- id: wordpress.capability.settings-management-missing
  languages:
  - php
  message: Settings management operation missing capability check. Use 'manage_options'
    for settings operations.
  severity: ERROR
  metadata:
    category: capability-checks
    cwe: CWE-285
    confidence: high
    tags:
    - error
    - wordpress
    - authorization
    - capability
    - permissions
    - authz
    - security
    vuln_class: authz
  patterns:
  - pattern: "if (isset($_POST['update_settings'])) {\n  update_option('site_title',\
      \ $_POST['title']);\n  update_option('site_description', $_POST['description']);\n\
      }\n"
  - pattern-not: "if (isset($_POST['update_settings'])) {\n  if (current_user_can('manage_options'))\
      \ {\n    update_option('site_title', sanitize_text_field($_POST['title']));\n\
      \    update_option('site_description', sanitize_text_field($_POST['description']));\n\
      \  }\n}\n"
- id: wordpress.capability.multisite-missing
  languages:
  - php
  message: Multisite operation missing capability check. Use multisite-specific capabilities
    for network operations.
  severity: ERROR
  metadata:
    category: capability-checks
    cwe: CWE-285
    confidence: high
    tags:
    - error
    - wordpress
    - authorization
    - capability
    - permissions
    - authz
    - security
    vuln_class: authz
  patterns:
  - pattern: "if (isset($_POST['create_site'])) {\n  wpmu_create_blog($_POST['domain'],\
      \ $_POST['path'], $_POST['title']);\n}\n"
  - pattern-not: "if (isset($_POST['create_site'])) {\n  if (current_user_can('manage_sites'))\
      \ {\n    wpmu_create_blog(sanitize_text_field($_POST['domain']), sanitize_text_field($_POST['path']),\
      \ sanitize_text_field($_POST['title']));\n  }\n}\n"
- id: wordpress.capability.hardcoded-capability
  languages:
  - php
  message: Hardcoded capability string. Use constants or variables for better maintainability.
  severity: INFO
  metadata:
    category: capability-checks
    cwe: CWE-285
    confidence: high
    tags:
    - wordpress
    - authorization
    - capability
    - permissions
    - info
    - authz
    - security
    vuln_class: authz
  patterns:
  - pattern: current_user_can("manage_options")
  - pattern: current_user_can("delete_users")
  - pattern: current_user_can("edit_posts")
- id: wordpress.capability.multiple-checks
  languages:
  - php
  message: Multiple capability checks can be optimized. Consider using a single check
    with multiple capabilities.
  severity: INFO
  metadata:
    category: capability-checks
    cwe: CWE-285
    confidence: high
    tags:
    - wordpress
    - authorization
    - capability
    - permissions
    - info
    - authz
    - security
    vuln_class: authz
  patterns:
  - pattern: "if (current_user_can('edit_posts') && current_user_can('publish_posts'))\
      \ {\n  // Operation\n}\n"
  - pattern-not: "if (current_user_can('edit_posts') || current_user_can('publish_posts'))\
      \ {\n  // Operation\n}\n"
