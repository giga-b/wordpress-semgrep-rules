# WordPress Strict Security Configuration
# Comprehensive security rules for thorough security audits

rules:
  # Nonce verification
  - id: wordpress.nonce.missing-verification
    languages: [php]
    message: "Nonce verification is missing. Use wp_verify_nonce() to verify the nonce before processing form data."
    severity: ERROR
    metadata:
      category: "nonce-verification"
      cwe: "CWE-352"
    paths:
      include:
        - '**/*.php'
      exclude:
        - '**/vendor/**'
        - '**/node_modules/**'
        - '**/.git/**'
        - '**/results/**'
    patterns:
      - pattern: |
          if (isset($_POST['submit'])) {
            $data = $_POST['data'];
          }
      - pattern-not: |
          if (isset($_POST['submit'])) {
            if (wp_verify_nonce($_POST['_wpnonce'], 'action_name')) {
              $data = $_POST['data'];
            }
          }

  # Capability checks
  - id: wordpress.capability.missing-admin-check
    languages: [php]
    message: "Missing admin capability check. Use current_user_can('manage_options') for admin-only operations."
    severity: ERROR
    metadata:
      category: "capability-checks"
      cwe: "CWE-285"
    paths:
      include:
        - '**/*.php'
      exclude:
        - '**/vendor/**'
        - '**/node_modules/**'
        - '**/.git/**'
        - '**/results/**'
    patterns:
      - pattern: |
          if (isset($_POST['update_settings'])) {
            update_option('sensitive_setting', $_POST['value']);
          }
      - pattern-not: |
          if (isset($_POST['update_settings'])) {
            if (current_user_can('manage_options')) {
              update_option('sensitive_setting', sanitize_text_field($_POST['value']));
            }
          }

  # Sanitization
  - id: wordpress.sanitization.missing-input
    languages: [php]
    message: "User input not sanitized. Use appropriate WordPress sanitization functions before using user data."
    severity: ERROR
    metadata:
      category: "sanitization"
      cwe: "CWE-79"
    paths:
      include:
        - '**/*.php'
      exclude:
        - '**/vendor/**'
        - '**/node_modules/**'
        - '**/.git/**'
        - '**/results/**'
    patterns:
      - pattern: |
          $data = $_POST['user_input'];
          echo $data;
      - pattern-not: |
          $data = sanitize_text_field($_POST['user_input']);
          echo $data;

  # XSS prevention
  - id: wordpress.xss.direct-output
    languages: [php]
    message: "Direct output of user input without escaping. Use esc_html(), esc_attr(), or wp_kses_post()."
    severity: ERROR
    metadata:
      category: "xss-prevention"
      cwe: "CWE-79"
    paths:
      include:
        - '**/*.php'
      exclude:
        - '**/vendor/**'
        - '**/node_modules/**'
        - '**/.git/**'
        - '**/results/**'
    patterns:
      - pattern: |
          echo $_POST['data'];
      - pattern-not: |
          echo esc_html($_POST['data']);

  # SQL injection
  - id: wordpress.sql.direct-query
    languages: [php]
    message: "Direct SQL query with user input. Use $wpdb->prepare() or prepared statements."
    severity: ERROR
    metadata:
      category: "sql-injection"
      cwe: "CWE-89"
    paths:
      include:
        - '**/*.php'
      exclude:
        - '**/vendor/**'
        - '**/node_modules/**'
        - '**/.git/**'
        - '**/results/**'
    patterns:
      - pattern: |
          $query = "SELECT * FROM wp_posts WHERE ID = " . $_GET['id'];
          $result = $wpdb->get_results($query);
      - pattern-not: |
          $query = $wpdb->prepare("SELECT * FROM wp_posts WHERE ID = %d", $_GET['id']);
          $result = $wpdb->get_results($query);
